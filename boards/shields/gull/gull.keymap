#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>


#define BASE 0
#define ADVANCE 1

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "default";
            bindings = <
    &kp ESC      &kp N1                     &kp N4   &kp N5                 &kp N6   &kp N7                     &kp N0   &kp MINUS
    &kp TAB      &kp Q    &kp N2   &kp N3   &kp R    &kp T                  &kp Y    &kp U    &kp N8   &kp N9   &kp P    &kp LBKT
    &mo ADVANCE  &kp A    &kp W    &kp E    &kp F    &kp G                  &kp H    &kp J    &kp I    &kp O    &kp SEMI  &kp SQT
    &kp LSHFT    &kp Z    &kp S    &kp D    &kp V    &kp B                  &kp N    &kp M    &kp K    &kp L    &kp FSLH  &kp BSLH
                          &kp X    &kp C                                                      &kp COMMA  &kp DOT
                                                              &kp LGUI               &kp LALT
                                                     &kp BSPC &kp LCTRL              &kp DEL &kp SPACE
                                                              &kp RET                &kp RET
            >;
        };

        advance_layer {
            display-name = "ADVANCE";
            bindings = <
    &kp GRAVE  &kp F1                                 &kp F4          &kp F5                 &kp F6   &kp F7                     &kp F10   &kp F11
    &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3    &kp F12                &trans    &trans    &kp F8   &kp F9   &trans     &kp RBKT
    &trans     &trans       &trans       &trans       &trans          &trans                 &trans    &trans    &kp UP    &trans    &trans  &trans
    &trans     &trans       &trans       &trans       &trans          &trans                 &trans    &kp LEFT    &kp DOWN    &kp RIGHT    &trans &trans
                            &trans       &trans                                                                       &trans  &trans
                                                              &trans                                &trans
                                                     &trans &trans                               &trans &trans
                                                              &trans                                 &trans
            >;
    };
};